@page "/hero"
@page "/hero/{id:int}"
@inject ISuperHeroService SuperHeroService

@if(Id == null)
{
   <PageTitle>Create a new Super Hero</PageTitle>
   <h3>create a new Super Hero</h3>
}
else
{
   <PageTitle>Edit @hero.HeroName</PageTitle>
   <h3>Edit @hero.HeroName</h3>
}

<EditForm Model="hero" OnSubmit="HandleSubmit">
   <div>
      <label for="firstName">First Name</label>
      <InputText id="firstName" @bind-Value="hero.FirstName" class="form-control"></InputText>
   </div>

   <div class="mt-2">
      <label for="lastName">Last Name</label>
      <InputText id="lastName" @bind-Value="hero.LastName" class="form-control"></InputText>
   </div>

   <div class="mt-2">
      <label for="heroName">Hero Name</label>
      <InputText id="heroName" @bind-Value="hero.HeroName" class="form-control"></InputText>
   </div>

   <div class="mt-2">
      <label>Comic</label><br />
      <InputSelect @bind-Value="hero.ComicId" class="form-select">
        @foreach (var comic in SuperHeroService.Comics)
        {
           <option value="@comic.Id">@comic.Name</option>
        }
      </InputSelect>
   </div>

   <br />
   <button type="submit" class="btn btn-primary">@btnText</button>

</EditForm>

@code {
   [Parameter]
   public int? Id { get; set; }

   SuperHero hero = new SuperHero { Comic = new Comic() };

   string btnText = string.Empty;

   protected override async Task OnInitializedAsync()
   {
      btnText = Id == null ? "Save New Hero" : "Update Hero";
      await SuperHeroService.GetComics();
   }

   protected override async Task OnParametersSetAsync()
   {
      if(Id == null)
      {
         //Create a new hero
      }
      else
      {
         hero = await SuperHeroService.GetSingleHero((int)Id);
      }
   }

   async Task HandleSubmit()
   {

   }

}